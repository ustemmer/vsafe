/*
 * DebuggingViewPanel.java
 *
 * Created on 15.02.2012, 05:09:06
 */
package de.versatel.noc.vsafe.server.mvc.views;

import de.versatel.noc.vSafe.mvc.AbstractViewPanel;

import de.versatel.noc.vSafe_Server.gui.VSafeJInternalFrame;
import de.versatel.noc.vSafe_Server.mvc.controllers.DebuggingController;
import de.versatel.noc.vSafe_Server.mvc.models.DebuggingModel;

import java.beans.PropertyChangeEvent;

/**
 *
 * @author ulrich.stemmer
 */
public class DebuggingViewPanel extends AbstractViewPanel {

    private final DebuggingController debuggingController;
    private final VSafeJInternalFrame vSafeJInternalFrame;

    /** Creates new form DebuggingViewPanel */
    public DebuggingViewPanel(VSafeJInternalFrame vsif, DebuggingController dc) {
        this.vSafeJInternalFrame = vsif;
        this.debuggingController = dc;
        initComponents();
    }

    @Override
    public void modelPropertyChange(PropertyChangeEvent evt) {
        if (evt.getPropertyName().equals(DebuggingModel.THROWABLE_THROWN)) {
            if (evt.getNewValue() != null && evt.getNewValue() instanceof Throwable) {
                String newline = "\n";
                Throwable t = (Throwable) evt.getNewValue();
                StringBuilder sb = new StringBuilder();
                sb.append(t.getMessage());
                sb.append(newline);

                StackTraceElement[] stes = t.getStackTrace();
                for (StackTraceElement s : stes) {
                    sb.append("   in:");
                    sb.append(s.getClassName());
                    sb.append(".");
                    sb.append(s.getMethodName());
                    sb.append(", in Zeile ");
                    sb.append(s.getLineNumber());
                    sb.append(newline);
                }
                sb.append(newline);
                this.jTextArea.append(sb.toString());
            }
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane = new javax.swing.JScrollPane();
        jTextArea = new javax.swing.JTextArea();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));

        jTextArea.setColumns(20);
        jTextArea.setRows(5);
        jScrollPane.setViewportView(jTextArea);

        add(jScrollPane);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JTextArea jTextArea;
    // End of variables declaration//GEN-END:variables
}
