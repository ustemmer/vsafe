/*
 * RMIServerViewPanel.java
 *
 * Created on 12.06.2011, 17:27:11
 */
package de.versatel.noc.vsafe.server.mvc.views;

import de.versatel.noc.vSafe_Server.mvc.models.RMIServerModel;
import de.versatel.noc.vSafe_Server.mvc.controllers.RMIServerController;
import de.versatel.noc.vSafe_Server.rmi.RMIServerHandling.ServerState;

import de.versatel.noc.vSafe.mvc.AbstractViewPanel;
import de.versatel.noc.vSafe.system.SystemSettings;


import java.awt.Container;
import java.beans.PropertyChangeEvent;
import java.util.Date;
import java.util.GregorianCalendar;
import java.text.SimpleDateFormat;
import javax.swing.JInternalFrame;

/** This method is called from within the constructor to
 * initialize the form.
 * WARNING: Do NOT modify this code. The content of this method is
 * always regenerated by the Form Editor.
 */
// <editor-fold defaultstate="collapsed" desc="Generated Code">
/**
 *
 * @author ulrich.stemmer
 */
public class RMIServerViewPanel extends AbstractViewPanel {

    private final JInternalFrame frame;
    private final Container parent;
    private final RMIServerController rMIServerController;
    private ServerState rMIServerState;

    /** Creates new form RMIServerViewPanel */
    public RMIServerViewPanel(
            JInternalFrame frame,
            Container parent,
            RMIServerController rMIServerController) {
        this.frame = frame;
        this.parent = parent;
        this.rMIServerController = rMIServerController;

        initComponents();
    }

    @Override
    public void modelPropertyChange(final PropertyChangeEvent evt) {
        if (evt.getPropertyName().equals(RMIServerModel.RMI_STATE)) {
            ServerState state = (ServerState) evt.getNewValue();
            if (state.equals(ServerState.STARTED)) {
                jButton_Start.setEnabled(false);
                jButton_Stop.setEnabled(true);
            } else if (state.equals(ServerState.STOPPED)) {
                jButton_Start.setEnabled(true);
                jButton_Stop.setEnabled(false);
            } else {
                jButton_Start.setEnabled(false);
                jButton_Stop.setEnabled(false);
            }
            
            GregorianCalendar cal = new GregorianCalendar();
            Date date = cal.getTime();
            SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.S");

            StringBuilder sb = new StringBuilder();
            sb.append(simpleDateFormat.format(date));
            sb.append(" ");
            sb.append(state.toString());
            sb.append(SystemSettings.SYSTEM_LINESEPERATOR);
            this.jTextArea.append(sb.toString());
        }

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanelRMIButtons = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jButton_Start = new javax.swing.JButton();
        jButton_Stop = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea = new javax.swing.JTextArea();

        setLayout(new java.awt.GridBagLayout());

        jPanelRMIButtons.setLayout(new java.awt.GridBagLayout());

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanelRMIButtons.add(jPanel3, gridBagConstraints);

        jButton_Start.setText("Start Server");
        jButton_Start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_StartActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanelRMIButtons.add(jButton_Start, gridBagConstraints);

        jButton_Stop.setText("Stop Server");
        jButton_Stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_StopActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        jPanelRMIButtons.add(jButton_Stop, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jPanelRMIButtons, gridBagConstraints);

        jTextArea.setColumns(20);
        jTextArea.setEditable(false);
        jTextArea.setRows(5);
        jTextArea.setEnabled(false);
        jScrollPane1.setViewportView(jTextArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jScrollPane1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_StartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_StartActionPerformed
        // TODO Prio 1: Logging einrichten
        rMIServerController.changeSystemProperty(RMIServerModel.RMI_START, null);
        this.jButton_Start.setEnabled(false);
        this.jButton_Stop.setEnabled(true);
}//GEN-LAST:event_jButton_StartActionPerformed

    private void jButton_StopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_StopActionPerformed
        rMIServerController.changeSystemProperty(RMIServerModel.RMI_STOP, null);
        this.jButton_Start.setEnabled(true);
        this.jButton_Stop.setEnabled(false);
}//GEN-LAST:event_jButton_StopActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Start;
    private javax.swing.JButton jButton_Stop;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanelRMIButtons;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea;
    // End of variables declaration//GEN-END:variables
}
